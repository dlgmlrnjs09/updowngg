name: Frontend Deploy

on:
  push:
    branches: [ master ]
    paths:
      - 'frontend/**'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Build Frontend
        working-directory: ./frontend
        run: |
          # 의존성 설치
          npm install @vitejs/plugin-vue@5.0.0
          npm install vite@6.0.3
          npm install vite-plugin-vue-devtools@7.0.0
          npm install @vue/tsconfig --save-dev
          npm install --legacy-peer-deps

          # vite 실행
          export NODE_OPTIONS="--experimental-json-modules"
          node -e "
            const path = require('path');
            const vite = require('vite');
          
            async function build() {
              try {
                const config = await import(path.resolve('./vite.config.js'));
                await vite.build({
                  ...config.default,
                  mode: 'production'
                });
              } catch (err) {
                console.error('Build error:', err);
                process.exit(1);
              }
            }
          
            build();
          "
        env:
          NODE_ENV: production
          VITE_APP_ENV: production

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            sudo rm -rf /usr/share/nginx/html/*

      - name: Copy build files to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "frontend/dist/*"
          target: "/usr/share/nginx/html"
          strip_components: 2

      - name: Restart Nginx
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            sudo systemctl restart nginx