name: Frontend Deploy

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Check directory structure
        run: |
          pwd
          ls -la

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'

      - name: Check package files
        run: |
          ls -la package*.json

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build
        env:
          NODE_ENV: production

      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          cat >> ~/.ssh/config << EOF
          Host ec2
            HostName ${{ secrets.EC2_HOST }}
            User ${{ secrets.EC2_USERNAME }}
            IdentityFile ~/.ssh/id_rsa
            StrictHostKeyChecking no
          EOF

      - name: Deploy to EC2
        if: github.ref == 'refs/heads/master'
        run: |
          # ecosystem.config.js 파일도 함께 전송
          scp ecosystem.config.js ec2:/home/${{ secrets.EC2_USERNAME }}/app/frontend/
          # dist 폴더를 EC2로 전송
          scp -r dist/* ec2:/home/${{ secrets.EC2_USERNAME }}/app/frontend/
          
          # EC2에서 실행할 배포 스크립트
          ssh ec2 'bash -s' << 'EOF'
            cd /home/${{ secrets.EC2_USERNAME }}/app/frontend
          
            # serve 패키지 설치 (정적 파일 서빙용)
            npm install -g serve
          
            # PM2가 설치되어 있지 않다면 설치
            if ! command -v pm2 &> /dev/null; then
              npm install -g pm2
            fi
          
            # PM2로 앱 시작/재시작 (frontend 디렉토리에서 실행)
            pm2 restart ecosystem.config.js --env production || pm2 start ecosystem.config.js --env production
          
            # Nginx 설정이 있다면 재시작
            sudo systemctl restart nginx
          EOF