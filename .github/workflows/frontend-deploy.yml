name: Frontend Deploy

on:
  push:
    branches: [ master ]
    paths:
      - 'frontend/**'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'

      - name: Build Frontend
        working-directory: ./frontend
        run: |
          # 기존 설정 파일 삭제
          rm -rf node_modules package-lock.json

          # package.json 업데이트 - EC2의 정확한 버전으로
          cat > package.json << 'EOF'
          {
            "name": "frontend",
            "version": "0.0.0",
            "private": true,
            "type": "module",
            "scripts": {
              "dev": "vite",
              "build": "vite build",
              "preview": "vite preview"
            },
            "dependencies": {
              "axios": "1.7.9",
              "pinia": "2.3.0",
              "vue": "3.5.13",
              "vue-router": "4.5.0",
              "vue-toastification": "2.0.0-rc.5"
            },
            "devDependencies": {
              "@types/node": "20.17.10",
              "@vitejs/plugin-vue": "5.2.1",
              "@vue/tsconfig": "0.5.1",
              "autoprefixer": "10.4.20",
              "postcss": "8.4.49",
              "tailwindcss": "3.4.17",
              "typescript": "5.7.2",
              "vite": "6.0.3",
              "vite-plugin-vue-devtools": "7.6.8"
            }
          }
          EOF

          # 의존성 설치 및 빌드
          npm install
          ls -la node_modules/.bin/
          node node_modules/vite/bin/vite.js build
        env:
          NODE_ENV: production
          VITE_APP_ENV: production

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            sudo rm -rf /usr/share/nginx/html/*

      - name: Copy build files to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "frontend/dist/*"
          target: "/usr/share/nginx/html"
          strip_components: 2

      - name: Restart Nginx
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            sudo systemctl restart nginx