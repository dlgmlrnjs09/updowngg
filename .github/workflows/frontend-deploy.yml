name: Frontend Deploy

on:
  push:
    branches: [ master ]
    paths:
      - 'frontend/**'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Build Frontend
        working-directory: ./frontend
        run: |
          # 기존 설정 파일 삭제
          rm -rf node_modules package-lock.json
          
          # tsconfig.json 수정
          sed -i 's/"@vue\/tsconfig\/tsconfig.dom.json"/"@vue\/tsconfig\/tsconfig.json"/g' tsconfig.json
          
          # 의존성 설치
          npm install -g vite@6.0.3
          npm install @vue/tsconfig --save-dev
          npm install --legacy-peer-deps
          
          # vite.config.js 직접 로드
          node -e "import('./vite.config.js').then(config => { 
            const vite = require('/opt/hostedtoolcache/node/22.12.0/x64/lib/node_modules/vite');
            vite.build({...config.default, mode: 'production'});
          })"
        env:
          NODE_ENV: production
          VITE_APP_ENV: production

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            sudo rm -rf /usr/share/nginx/html/*

      - name: Copy build files to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "frontend/dist/*"
          target: "/usr/share/nginx/html"
          strip_components: 2

      - name: Restart Nginx
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            sudo systemctl restart nginx